name: Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  MOBILE_CSPROJ: DemoGitActionXamarin.iOS/DemoGitActionXamarin.iOS.csproj
  IPA_PATH: DemoGitActionXamarin.iOS/bin/iPhone/Release/DemoGitActionXamarin.ipa
  ANDROID_CSPROJ: DemoGitActionXamarin.Android/DemoGitActionXamarin.Android.csproj
jobs:
  # iOS:
    # name: iOS
    # runs-on: macos-latest
    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v2
    #   - name: Install the Apple certificate and provisioning profile
    #     env:
    #       BUILD_CERTIFICATE_BASE64: ${{ secrets.CERT_P12 }}
    #       P12_PASSWORD: ${{ secrets.P12_PASS }}
    #       BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MOBILEPROVISION }}
    #       KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASS }}
    #     run: |
    #       # create variables
    #       CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
    #       PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
    #       KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
    #       # import certificate and provisioning profile from secrets
    #       echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
    #       echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
    #       # create temporary keychain
    #       security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
    #       security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
    #       security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
    #       # import certificate to keychain
    #       security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
    #       security list-keychain -d user -s $KEYCHAIN_PATH
    #       # apply provisioning profile
    #       mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
    #       cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles    
          
    #   - name: Install dependencies
    #     run: MSBuild /t:restore $MOBILE_CSPROJ

    #   - name: Build iOS
    #     run: MSBuild /t:Clean /t:Build /p:Configuration=Release /p:Platform=iPhone /p:BuildIpa=true $MOBILE_CSPROJ
        
          
    #   - name: Setup App Center CLI
    #     run: npm install -g appcenter-cli
        
    #   - name: Upload iOS app to App Center        
    #     run: appcenter distribute release --silent --file $IPA_PATH --app PPThorTeam-outlook.com/Demo-GitAction-iOS --group Collaborators --token ${{ secrets.APPCENTER_TOKEN }}
      
    #   - name: Update Testfight
    #     env:
    #       APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
    #       APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
    #     run: |
    #       xcrun altool --upload-app -t ios -f $IPA_PATH -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"
  build:
    name: android
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # - name: Setup MSBuild
    #   uses: microsoft/setup-msbuild@v1.0.3
      
    - name: Install dependencies
      run: MSBuild /t:restore $ANDROID_CSPROJ

    - name: Build
      run: MSBuild /t:SignAndroidPackage $ANDROID_CSPROJ /p:Configuration=Release /p:AndroidPackageFormat=aab /p:OutputPath=bin/Release/
    # - name: Sign app aab 
    #   uses: r0adkll/sign-android-release@v1
    #   id: sign_app
    #   with:
    #     releaseDirectory: DemoGitActionXamarin.Android/bin/Release
    #     signingKeyBase64: ${{ secrets.SIGNING_KEY }}
    #     alias: ${{ secrets.ALIAS }}
    #     keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
    #     # keyStorePassword: 123456
    #     # keyPassword: ${{ secrets.KEY_PASSWORD }}
    #   env:
    #     BUILD_TOOLS_VERSION: "30.0.2" 
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: demogitactionxamarin-Signed.aab
        path: DemoGitActionXamarin.Android/bin/Release/com.nick.demogitaction.demogitactionxamarin-Signed.aab
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: demogitactionxamarin-Signed.aab
        path: DemoGitActionXamarin.Android/bin/Release/demogitactionxamarin-Signed.aab
    # - name: Create service_account.json
    #   id: write_file
    #   uses: timheuer/base64-to-file@v1.1
    #   with:
    #     fileName: service_account.json
    #     fileDir: ./DemoGitActionXamarin.Android/bin/key
    #     encodedString: ${{ secrets.GCP_CREDENTIALS }}
    - name: Publish app to play store
      uses: r0adkll/upload-google-play@v1
      with:
        # serviceAccountJson: DemoGitActionXamarin.Android/bin/key/service_account.json
        serviceAccountJsonPlainText : ${{ secrets.GCP_CREDENTIALS }}
        packageName: com.nick
        releaseFile: DemoGitActionXamarin.Android/bin/Release/demogitactionxamarin-Signed.aab
        track: internal
